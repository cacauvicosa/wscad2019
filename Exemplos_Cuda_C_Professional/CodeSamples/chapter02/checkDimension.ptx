//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19856038
// Cuda compilation tools, release 7.5, V7.5.17
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_20
.address_size 64

	// .globl	_Z10checkIndexv
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 1 .b8 $str[24] = {116, 104, 114, 101, 97, 100, 73, 100, 120, 58, 40, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 41, 10, 0};
.global .align 1 .b8 $str1[23] = {98, 108, 111, 99, 107, 73, 100, 120, 58, 40, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 41, 10, 0};
.global .align 1 .b8 $str2[23] = {98, 108, 111, 99, 107, 68, 105, 109, 58, 40, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 41, 10, 0};
.global .align 1 .b8 $str3[22] = {103, 114, 105, 100, 68, 105, 109, 58, 40, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 41, 10, 0};

.visible .entry _Z10checkIndexv(

)
{
	.local .align 8 .b8 	__local_depot0[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<12>;


	mov.u64 	%rd11, __local_depot0;
	cvta.local.u64 	%SP, %rd11;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	mov.u32 	%r3, %tid.z;
	add.u64 	%rd1, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd1;
	st.local.u32 	[%rd2], %r1;
	st.local.u32 	[%rd2+4], %r2;
	st.local.u32 	[%rd2+8], %r3;
	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd1;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r4, [retval0+0];
	
	//{
	}// Callseq End 0
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ctaid.y;
	mov.u32 	%r7, %ctaid.z;
	st.local.u32 	[%rd2], %r5;
	st.local.u32 	[%rd2+4], %r6;
	st.local.u32 	[%rd2+8], %r7;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd1;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r8, [retval0+0];
	
	//{
	}// Callseq End 1
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ntid.z;
	st.local.u32 	[%rd2], %r9;
	st.local.u32 	[%rd2+4], %r10;
	st.local.u32 	[%rd2+8], %r11;
	mov.u64 	%rd7, $str2;
	cvta.global.u64 	%rd8, %rd7;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd1;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r12, [retval0+0];
	
	//{
	}// Callseq End 2
	mov.u32 	%r13, %nctaid.x;
	mov.u32 	%r14, %nctaid.y;
	mov.u32 	%r15, %nctaid.z;
	st.local.u32 	[%rd2], %r13;
	st.local.u32 	[%rd2+4], %r14;
	st.local.u32 	[%rd2+8], %r15;
	mov.u64 	%rd9, $str3;
	cvta.global.u64 	%rd10, %rd9;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd1;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r16, [retval0+0];
	
	//{
	}// Callseq End 3
	ret;
}


